1. 스프링 부트
  1) 스프링을 편리하게 사용할 수 있도록 지원
    - Tomcat 서버 내장
  
  2) 스프링
    - 자바 언어 기반의 프레임워크
      - 자바는 객체 지향 언어
    - 객체 지향 언어가 가진 강력한 특징을 살려내는 프레임워크
    - 좋은 객체 지향을 개발할 수 있게 도와주는 프레임워크

2. 좋은 객체 지향 프레임워크
  1) 객체 지향 프로그래밍
    - 컴퓨터 프로그램을 객체들의 모임으로 파악하고자 하는 것
    - 객체는 메시지를 주고받고 데이터를 처리할 수 있다.
    - 프로그램을 유연하고 변경이 용이하게 만들기 때문에 대규모 소프트웨어 개발에 사용
    
  2) 다형성
    - 역할과 구현으로 세상을 구분
      - 역할 = 인터페이스
      - 구현 = 인터페이스를 구현한 클래스, 구현 객체
  
3. SOLID
  1) SRP(Single Resposibility Principle)
    - 단일 책임 원칙
    - 한 클래스는 하나의 책임만 가진다.
  2) OCP(Open-Closed Principle)
    - 개방-폐쇄 원칙
    - 소프트웨어 요소는 확장에는 열려 있으나 변경에는 닫혀 있어야 한다.
    - 다형성
    - 인터페이스를 구현한 새로운 클래스를 하나 만들어서 새로운 기능을 구현
  3) LSP(Liscov Substitution Principle)
    - 리스코프 치환 원칙
    - 객체는 프로그램의 정확성을 깨뜨리지 않으면서 하위 타입의 인스턴스로 바꿀 수 있어야 한다.
    - 하위 클래스는 인터페이스 규약을 다 지켜야 함
  4) ISP(Interface Segregation Principle)
    - 인터페이스 분리 원칙
    - 특정 클라이언트를 위한 인터페이스 여러 개가 범용 인터페이스 하나보다 낫다.
  5) DIP(Dependency Inversion Principle)
    - 의존관계 역전 원칙
    - 추상화에 의존해야지 구체화에 의존하면 안된다.
    - 구현 클래스에 의존하지 말고 인터페이스에 의존해라

4. 객체 지향 설계와 스프링
  1) DI(Dependency Injection), DI 컨테이너
    - 의존관계, 의존성 주입
    - 다형성, OCP, DIP 가능하게 해줌


